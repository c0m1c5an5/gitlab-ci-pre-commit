[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov"
testpaths = ["tests"]
pythonpath = ["."]

[project]
name = "gitlab-ci-precommit"
version = "1.0.0"
dynamic = ["dependencies"]

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[project.scripts]
gitlab-ci-lint = "gitlab_ci_lint.cli:cli"
gitlab-ci-fmt = "gitlab_ci_fmt.cli:cli"
gitlab-ci-shellcheck = "gitlab_ci_shellcheck.cli:cli"

[tool.setuptools]
packages = ["gitlab_ci_lint", "gitlab_ci_fmt", "gitlab_ci_shellcheck"]

[tool.ruff]
pydocstyle.convention = "google"
select = [
    "RUF", # Ruff-specific rules
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "D",   # pydocstyle
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "ANN", # flake8-annotations
    "S",   # flake8-bandit
    "PL",  # Pylint
    "TRY", # tryceratops
    "EM",  # flake8-errmsg
    "C4",  # flake8-comprehensions
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
]
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D107",   # Missing docstring in `__init__`
    "D211",   # No blank lines allowed before class docstring
    "D213",   # Multi-line docstring summary should start at the second line
    "E501",   # Line too long, handled by black
    "S603",   # `subprocess` call: check for execution of untrusted input
    "S607",   # Starting a process with a partial executable path
    "TRY400", # Use `logging.exception` instead of `logging.error`
]
